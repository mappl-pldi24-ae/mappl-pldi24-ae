external def random : Unit -> nat[26]
external def safe_dec : nat -> nat

def drawChar(key: nat, observation: nat, depth:nat) : Unit = {
    if depth = 0 then 
        return unit
    else 
        drawnChar = sample(CAT([0.04167, 0.01492, 0.02782, 0.04253, 0.12702
        , 0.02228, 0.02015, 0.0177, 0.06966, 0.0153, 0.0772, 0.04025, 0.02406
        , 0.06749, 0.07507, 0.01929, 0.00095, 0.05987, 0.06327, 0.09056, 0.02758
        , 0.00978, 0.02360, 0.00150, 0.01974, 0.00074]));
        fail = sample(BERN(0.0001));
        observe (observation = drawnChar + if fail then 0 else key end) from BERN(1);
        drawChar(key, observation, safe_dec depth)
    end
}

def model(len: nat) : nat = {
    key1 = sample(CAT([0.03846153846,0.03846153846,0.03846153846,0.03846153846,0.03846153846
    ,0.03846153846,0.03846153846,0.03846153846,0.03846153846,0.03846153846,0.03846153846,0.03846153846
    ,0.03846153846,0.03846153846,0.03846153846,0.03846153846,0.03846153846,0.03846153846,0.03846153846
    ,0.03846153846,0.03846153846,0.03846153846,0.03846153846,0.03846153846,0.03846153846,0.03846153846]));
    drawChar(key1, 23, len);
    return key1
}
